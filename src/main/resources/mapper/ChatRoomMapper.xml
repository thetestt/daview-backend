<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.daview.mapper.ChatRoomMapper">

<select id="getChatRoomListForUser" resultType="com.daview.dto.ChatRoomDTO">
    SELECT 
        cr.chatroom_id,
        cr.last_message,
        cr.sent_at,
        cr.sender_id,
        cr.receiver_id,
        cr.facility_id,
        cr.sender_trash_can,
        cr.receiver_trash_can,

        -- ÏÉÅÎåÄÎ∞© Ï†ïÎ≥¥
        CASE
            WHEN cr.sender_id = #{memberId} THEN cr.receiver_id
            ELSE cr.sender_id
        END AS opponent_id,

        CASE
            WHEN cr.sender_id = #{memberId} THEN cr.receiver_name
            ELSE cr.sender_name
        END AS opponent_name,

        CASE
            WHEN cr.sender_id = #{memberId} THEN cr.receiver_type
            ELSE cr.sender_type
        END AS type,

        -- Ïó≠Ìï† Î∞è ÏÉÅÌÉú
        CASE
            WHEN cr.sender_id = #{memberId} THEN 'sender'
            WHEN cr.receiver_id = #{memberId} THEN 'receiver'
        END AS user_role,

        CASE
            WHEN cr.sender_id = #{memberId} THEN cr.sender_trash_can
            ELSE cr.receiver_trash_can
        END AS i_left_this_room,

        CASE
            WHEN cr.sender_id = #{memberId} THEN cr.receiver_trash_can
            ELSE cr.sender_trash_can
        END AS opponent_out,

        -- üî• Ïïà ÏùΩÏùÄ Î©îÏãúÏßÄ Ïàò
        (
          SELECT COUNT(*)
          FROM chatmessage cm
          WHERE cm.chatroom_id = cr.chatroom_id
            AND cm.is_read = 0
            AND cm.sender_id != #{memberId}
        ) AS unread_count

  FROM chatroom cr
  WHERE
    (
      (cr.sender_id = #{memberId} AND cr.sender_trash_can = FALSE)
      OR
      (cr.receiver_id = #{memberId} AND cr.receiver_trash_can = FALSE)
    )
  ORDER BY cr.sent_at DESC
</select>
  
    <!-- 1. Ï±ÑÌåÖÎ∞© ÏÉùÏÑ± -->
<insert id="insertChatRoom">
    INSERT INTO chatroom (
        chatroom_id,
        sender_id,
        receiver_id,
        facility_id,
        sender_name,
        sender_type,
        receiver_name,
        receiver_type
    )
    VALUES (
        #{chatroomId},
        #{senderId},
        #{receiverId},
        #{facilityId},
        #{senderName},
        #{senderType},
        #{receiverName},
        #{receiverType}
    )
</insert>

	
	<!-- 2. Í∏∞Ï°¥ Ï±ÑÌåÖÎ∞© ÌôïÏù∏ Ï≤òÏùåÎ°úÎî©Îïå_Í∏∞Î≥∏Î¶¨Ïä§Ìä∏ -->
<select id="findChatRoomId" resultType="string">
    SELECT chatroom_id
    FROM chatroom
    WHERE sender_id = #{senderId}
      AND receiver_id = #{receiverId}
      AND facility_id = #{facilityId}
    LIMIT 1
</select>

    <!-- 3. Ïú†Ï†ÄÏùò Î™®Îì† Ï±ÑÌåÖÎ∞© Î™©Î°ù Ï°∞Ìöå -->
<select id="getChatRoomsByMemberId" resultType="com.daview.dto.ChatRoomDTO">
    SELECT chatroom_id AS chatroomId,
           CASE 
             WHEN sender_id = #{memberId} THEN sender_id
             ELSE receiver_id
           END AS memberId,
           facility_id AS facilityId,
           created_at AS createdAt
    FROM chatroom
    WHERE 
      (
        sender_id = #{memberId} AND sender_trash_can = FALSE
      )
      OR
      (
        receiver_id = #{memberId} AND receiver_trash_can = FALSE
      )
</select>
    
    <!-- Ï±ÑÌåÖÎ∞© Ï†ëÍ∑ºÍ∂åÌïú Îß¥Î≤Ñ ÏïÑÏù¥Îîî -->
<select id="isUserInChatRoom" resultType="int">
  SELECT COUNT(*)
  FROM chatroom
  WHERE chatroom_id = #{chatroomId}
    AND (sender_id = #{memberId,jdbcType=BIGINT} OR receiver_id = #{memberId,jdbcType=BIGINT})
</select>
    
    
<!-- Í∏∞Î≥∏ Ï±ÑÌåÖ Î¶¨Ïä§Ìä∏Ïóê Ï†ïÎ≥¥ÎÑ£Í∏∞ ÏøºÎ¶¨ + ÏÉÅÎåÄÎ∞© ÎÇòÍ∞îÎäîÏßÄ Ï≤¥ÌÅ¨ÌïòÎ†§Í≥† ÌñàÎäîÎç∞ Íº¨Ïù∏ÎìØ?  -->
<select id="getChatRoomInfoForList" resultType="com.daview.dto.ChatRoomDTO">

   SELECT
    cr.chatroom_id AS chatroomId,
    cr.sender_id AS senderId,
    cr.receiver_id AS receiverId,
    cr.sender_trash_can AS senderTrashCan,
    cr.receiver_trash_can AS receiverTrashCan,

    CASE
      WHEN cr.sender_id = #{memberId} THEN cr.receiver_id
      ELSE cr.sender_id
    END AS opponentId,

    -- Í∏∞Î≥∏ Ïù¥Î¶Ñ (ÏÉÅÎåÄÎ∞© Í∏∞Ï§Ä)
    (
      SELECT du.name
      FROM dv_users du
      WHERE du.member_id = CASE
        WHEN cr.sender_id = #{memberId} THEN cr.receiver_id
        ELSE cr.sender_id
      END
    ) AS opponentName,

    -- ÎßàÏßÄÎßâ Î©îÏãúÏßÄ
    cm.content AS lastMessage,
    cm.sent_at AS lastTime,

    (
      SELECT COUNT(*)
      FROM chatmessage cm2
      WHERE cm2.chatroom_id = cr.chatroom_id
        AND cm2.is_read = 0
        AND cm2.sender_id != #{memberId}
    ) AS unreadCount,

    cr.facility_id AS facilityId,

    -- ÏãúÏÑ§ Ï†ïÎ≥¥
    (
      SELECT f.facility_type
      FROM facility f
      WHERE f.facility_id = cr.facility_id
      LIMIT 1
    ) AS facilityType,
    (
      SELECT f.facility_name
      FROM facility f
      WHERE f.facility_id = cr.facility_id
      LIMIT 1
    ) AS facilityName,
    (
      SELECT f.facility_address_location
      FROM facility f
      WHERE f.facility_id = cr.facility_id
      LIMIT 1
    ) AS facilityAddressLocation,
    (
      SELECT f.facility_address_city
      FROM facility f
      WHERE f.facility_id = cr.facility_id
      LIMIT 1
    ) AS facilityAddressCity,
    (
      SELECT f.facility_phone
      FROM facility f
      WHERE f.facility_id = cr.facility_id
      LIMIT 1
    ) AS facilityPhone,

    -- ÏöîÏñëÏÇ¨ Ï†ïÎ≥¥
    (
      SELECT c.hope_work_area_location
      FROM caregiver c
      WHERE c.caregiver_id = cr.facility_id
      LIMIT 1
    ) AS hopeWorkAreaLocation,
    (
      SELECT c.hope_work_area_city
      FROM caregiver c
      WHERE c.caregiver_id = cr.facility_id
      LIMIT 1
    ) AS hopeWorkAreaCity,
    (
      SELECT du.name
      FROM dv_users du
      WHERE du.member_id = (
        SELECT c.member_id
        FROM caregiver c
        WHERE c.caregiver_id = cr.facility_id
      )
    ) AS caregiverName,

    -- ÏùºÎ∞ò Ïú†Ï†Ä Ïù¥Î¶Ñ (ÏÉÅÎåÄÎ∞©)
    (
      SELECT du.username
      FROM dv_users du
      WHERE du.member_id = CASE
        WHEN cr.sender_id = #{memberId} THEN cr.receiver_id
        ELSE cr.sender_id
      END
    ) AS userName

  FROM chatroom cr
  LEFT JOIN (
    SELECT a1.chatroom_id, a1.content, a1.sent_at
    FROM chatmessage a1
    INNER JOIN (
      SELECT chatroom_id, MAX(sent_at) AS max_sent
      FROM chatmessage
      GROUP BY chatroom_id
    ) a2 ON a1.chatroom_id = a2.chatroom_id
         AND a1.sent_at = a2.max_sent
  ) cm ON cr.chatroom_id = cm.chatroom_id
  WHERE cr.chatroom_id = #{chatroomId}
    
</select>




<select id="getOpponentId" resultType="long">
  SELECT CASE
           WHEN sender_id = #{memberId} THEN receiver_id
           ELSE sender_id
         END AS opponentId
  FROM chatroom
  WHERE chatroom_id = #{chatroomId}
</select>

<!--  ÏÉÅÎåÄÎ∞© ÎÇòÍ∞îÎäîÏßÄ Ï≤¥Ìä∏ÌïòÎäî ÏøºÎ¶¨ Ï∂îÍ∞Ä -->
<select id="getChatRoomInfo" resultType="com.daview.dto.ChatRoomDTO">
   SELECT
    cr.chatroom_id AS chatroomId,  <!-- cr: chatroom ÌÖåÏù¥Î∏îÏùò chatroom_id -->
    cr.sender_id AS senderId,
    cr.receiver_id AS receiverId,
    cr.sender_trash_can AS senderTrashCan,
    cr.receiver_trash_can AS receiverTrashCan,
    
    CASE
      WHEN cr.sender_id = #{memberId} THEN cr.receiver_id
      ELSE cr.sender_id
    END AS opponentId,
    
    -- Í∏∞Î≥∏ Ïù¥Î¶Ñ (dv_users.name)
    (
      SELECT du.name
      FROM dv_users du
      WHERE du.member_id = CASE
        WHEN cr.sender_id = #{memberId} THEN cr.receiver_id
        ELSE cr.sender_id
      END
    ) AS opponentName,
    
    -- ÎßàÏßÄÎßâ Î©îÏãúÏßÄ Î∞è ÏãúÍ∞Ñ
    cm.content AS lastMessage,  <!-- cm: chatmessage ÌÖåÏù¥Î∏îÏùò content -->
    cm.sent_at AS lastTime,    <!-- cm: chatmessage ÌÖåÏù¥Î∏îÏùò sent_at -->
    
    -- ÏùΩÏßÄ ÏïäÏùÄ Î©îÏãúÏßÄ Ïàò
    (
      SELECT COUNT(*)
      FROM chatmessage cm2
      WHERE cm2.chatroom_id = cr.chatroom_id  <!-- cr: chatroom ÌÖåÏù¥Î∏îÏùò chatroom_id -->
        AND cm2.is_read = 0
        AND cm2.sender_id != #{memberId}
    ) AS unreadCount,
    
    -- ÏãúÏÑ§ Ï†ïÎ≥¥ (facility_id Ï∂îÍ∞Ä)
    cr.facility_id AS facilityId, 

    -- 1. ÏãúÏÑ§ Ï†ïÎ≥¥ Í∞ÄÏ†∏Ïò§Í∏∞
    (
      SELECT f.facility_type
      FROM facility f
      WHERE f.facility_id = cr.facility_id
      LIMIT 1
    ) AS facilityType,

    (
      SELECT f.facility_name
      FROM facility f
      WHERE f.facility_id = cr.facility_id
      LIMIT 1
    ) AS facilityName,

    (
      SELECT f.facility_address_location
      FROM facility f
      WHERE f.facility_id = cr.facility_id
      LIMIT 1
    ) AS facilityAddressLocation,

    (
      SELECT f.facility_address_city
      FROM facility f
      WHERE f.facility_id = cr.facility_id
      LIMIT 1
    ) AS facilityAddressCity,

    (
      SELECT f.facility_phone
      FROM facility f
      WHERE f.facility_id = cr.facility_id
      LIMIT 1
    ) AS facilityPhone,

    -- 2. ÏöîÏñëÏÇ¨ Ï†ïÎ≥¥ (caregiver_idÎ°ú Ï°∞Ìöå)
    (
      SELECT c.hope_work_area_location
      FROM caregiver c
      WHERE c.caregiver_id = cr.facility_id
    ) AS hopeWorkAreaLocation,

    (
      SELECT c.hope_work_area_city
      FROM caregiver c
      WHERE c.caregiver_id = cr.facility_id
    ) AS hopeWorkAreaCity,
    
    (
      SELECT du.name
      FROM dv_users du
      WHERE du.member_id = (
        SELECT c.member_id
        FROM caregiver c
        WHERE c.caregiver_id = cr.facility_id
      )
    ) AS caregiverName,
    
    -- 3. ÏùºÎ∞ò Ïú†Ï†Ä Ï†ïÎ≥¥ (caregiver_idÍ∞Ä ÏóÜÏúºÎ©¥ ÏùºÎ∞ò Ïú†Ï†Ä)
    (
      SELECT du.name
      FROM dv_users du
      WHERE du.member_id = cr.receiver_id
    ) AS userName

  FROM chatroom cr
  LEFT JOIN (
    SELECT
      a1.chatroom_id,
      a1.content,
      a1.sent_at
    FROM chatmessage a1
    INNER JOIN (
      SELECT chatroom_id, MAX(sent_at) AS max_sent
      FROM chatmessage
      GROUP BY chatroom_id
    ) a2 ON a1.chatroom_id = a2.chatroom_id
         AND a1.sent_at = a2.max_sent
  ) cm ON cr.chatroom_id = cm.chatroom_id  <!-- cr: chatroom ÌÖåÏù¥Î∏îÍ≥º cm: chatmessage ÌÖåÏù¥Î∏îÏùò Ï°∞Ïù∏ -->
  WHERE cr.chatroom_id = #{chatroomId}
</select>


<!-- Ï±ÑÌã∑Î∞© ÏïÑÏù¥ÎîîÎ°ú ÎÇòÍ∞ÑÎ∞©Ïù∏ÏßÄ ÏïÑÎãåÏßÄ Í≤ÄÏÉâ -->
<select id="getChatRoomDetailById" resultType="com.daview.dto.ChatRoomDTO">
  SELECT 
        cr.chatroom_id AS chatroomId,
        cr.sender_id AS senderId,
        cr.receiver_id AS receiverId,
        cr.sender_trash_can AS senderTrashCan,
        cr.receiver_trash_can AS receiverTrashCan
    FROM chatroom cr
    WHERE cr.chatroom_id = #{chatroomId}
</select>

<select id="findById" resultType="com.daview.dto.ChatRoomDTO">
SELECT 
    cr.chatroom_id AS chatroomId,
    cr.sender_id AS senderId,
    cr.receiver_id AS receiverId,
    cr.facility_id AS facilityId,
    cm.content AS lastMessage,
    cm.sent_at AS lastTime,
    cr.sender_trash_can AS senderTrashCan,
    cr.receiver_trash_can AS receiverTrashCan
FROM chatroom cr
LEFT JOIN chatmessage cm 
  ON cr.chatroom_id = cm.chatroom_id 
  AND cm.sent_at = (
    SELECT MAX(sent_at)
    FROM chatmessage
    WHERE chatroom_id = #{chatroomId}
  )
WHERE cr.chatroom_id = #{chatroomId}
    </select>
    
    <!-- ÏõπÏÜåÏºì Í≤ÄÏ¶ùÏö© Ï±ÑÌåÖÎ∞© ÎÇòÍ∞îÎäîÏßÄ Ïó¨Î∂Ä ÌôïÏù∏ -->
    <select id="existsByChatroomIdAndMemberId" resultType="boolean">
  SELECT EXISTS (
    SELECT 1
    FROM chatroom
    WHERE chatroom_id = #{chatroomId}
      AND (sender_id = #{memberId} OR receiver_id = #{memberId})
  )
</select>
    <!-- Ï≥áÎ£∏Ïóê ÎßàÏßÄÎßâ Î©îÏÑ∏ÏßÄ Ï†ÄÏû• -->
<update id="updateLastMessageAndTime">
  UPDATE chatroom
  SET 
    last_message = #{lastMessage},
    sent_at = #{sentAt}
  WHERE chatroom_id = #{chatroomId}
</update>

<update id="updateTrashCan" parameterType="map">
  UPDATE chatroom
  SET 
    receiver_trash_can = CASE WHEN #{memberId} = sender_id THEN receiver_trash_can ELSE true END,
    sender_trash_can = CASE WHEN #{memberId} = receiver_id THEN sender_trash_can ELSE true END
  WHERE chatroom_id = #{chatroomId}
</update>

<!-- Í¥ÄÎ¶¨ÏûêÏö© Î™®Îì† Ï±ÑÌåÖÎ∞© Ï°∞Ìöå -->
<select id="findAllChatRoomsForAdmin" resultType="com.daview.dto.ChatRoomDTO">
  SELECT 
    cr.chatroom_id AS chatroomId,
    cr.sender_id AS senderId,
    cr.receiver_id AS receiverId,
    cr.facility_id AS facilityId,
    cr.created_at AS createdAt,
    cr.status AS status,
    
    -- Î∞úÏã†Ïûê Ï†ïÎ≥¥
    sender.name AS senderName,
    
    -- ÏàòÏã†Ïûê Ï†ïÎ≥¥  
    receiver.name AS receiverName,
    
    -- ÎßàÏßÄÎßâ Î©îÏãúÏßÄ
    cm.content AS lastMessage,
    cm.sent_at AS lastTime,
    
    -- ÏùΩÏßÄ ÏïäÏùÄ Î©îÏãúÏßÄ Ïàò
    (
      SELECT COUNT(*)
      FROM chatmessage cm2
      WHERE cm2.chatroom_id = cr.chatroom_id
        AND cm2.is_read = 0
    ) AS unreadCount
    
  FROM chatroom cr
  LEFT JOIN dv_users sender ON cr.sender_id = sender.member_id
  LEFT JOIN dv_users receiver ON cr.receiver_id = receiver.member_id
  LEFT JOIN (
    SELECT
      a1.chatroom_id,
      a1.content,
      a1.sent_at
    FROM chatmessage a1
    INNER JOIN (
      SELECT chatroom_id, MAX(sent_at) AS max_sent
      FROM chatmessage
      GROUP BY chatroom_id
    ) a2 ON a1.chatroom_id = a2.chatroom_id
         AND a1.sent_at = a2.max_sent
  ) cm ON cr.chatroom_id = cm.chatroom_id
  
  WHERE 1=1
  <if test="search != null and search != ''">
    AND (
      sender.name LIKE CONCAT('%', #{search}, '%') OR
      receiver.name LIKE CONCAT('%', #{search}, '%') OR
      cm.content LIKE CONCAT('%', #{search}, '%')
    )
  </if>
  <if test="status != null and status != '' and status != 'all'">
    AND cr.status = #{status}
  </if>
  
  ORDER BY cm.sent_at DESC
  LIMIT #{limit} OFFSET #{offset}
</select>

<!-- Í¥ÄÎ¶¨ÏûêÏö© Ï±ÑÌåÖÎ∞© ÏÉÅÌÉú ÏóÖÎç∞Ïù¥Ìä∏ -->
<update id="updateChatRoomStatus">
  UPDATE chatroom
  SET status = #{status}
  WHERE chatroom_id = #{chatroomId}
</update>
   
</mapper>