<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.daview.mapper.CaregiverMapper">

  <resultMap id="CaregiverMap" type="com.daview.dto.CaregiverDTO">
	
    <id property="caregiverId" column="caregiver_id"/>
    <result property="memberId" column="member_id"/>
    <result property="hopeWorkAreaLocation" column="hope_work_area_location"/>
    <result property="hopeWorkAreaCity" column="hope_work_area_city"/>
    <result property="hopeWorkPlace" column="hope_work_place"/>
    <result property="hopeWorkType" column="hope_work_type"/>
    <result property="hopeEmploymentType" column="hope_employment_type"/>
    <result property="educationLevel" column="education_level"/>
    <result property="introduction" column="introduction"/>
    <result property="hopeWorkAmount" column="hope_work_amount"/>
    <result property="caregiverCreatedAt" column="caregiver_created_at"/>
    <result property="caregiverUpdateAt" column="caregiver_update_at"/>
    <result property="name" column="name" />
    <result property="username" column="username"/>
    <result property="userGender" column="user_gender"/>
    
      <!-- ✅ 자격증과 경력 리스트 매핑 -->
    <collection property="certificates" ofType="string"
                column="caregiver_id"
                select="getCertificatesByCaregiverId"/>
    <collection property="career" ofType="com.daview.dto.CaregiverCareerDTO"
                column="caregiver_id"
                select="getCareerByCaregiverId"/>
    
  </resultMap>

  <select id="getAllCaregivers" resultMap="CaregiverMap">
    SELECT
      c.*,
      u.name,
      u.user_gender
    FROM caregiver c
    JOIN dv_users u ON c.member_id = u.member_id
    WHERE c.trash_can = 0
  </select>

  <select id="getCertificatesByCaregiverId" resultType="String">
    SELECT certificate_name
    FROM caregiver_certificates
    WHERE caregiver_id = #{caregiverId}
  </select>

  <select id="getCareerByCaregiverId" resultType="com.daview.dto.CaregiverCareerDTO">
    SELECT company_name, start_date, end_date
    FROM caregiver_career
    WHERE caregiver_id = #{caregiverId}
  </select>


	<select id="getCaregiverById" resultMap="CaregiverMap">
  SELECT
    c.*,
    u.name,
    u.user_gender
  FROM caregiver c
  JOIN dv_users u ON c.member_id = u.member_id
  WHERE c.caregiver_id = #{caregiverId}
</select>


<select id="searchByKeyword" resultType="CaregiverDTO">
  SELECT 
    c.*,
    u.name AS user_name,
    u.phone AS user_phone,
    u.user_gender AS user_gender,
    u.email AS user_email
  FROM caregiver c
  JOIN dv_users u ON c.member_id = u.member_id
  WHERE u.name LIKE CONCAT('%', #{keyword}, '%')
     OR c.introduction LIKE CONCAT('%', #{keyword}, '%')
</select>



<!--요양사 통합검색-->
<select id="searchCaregiversByKeyword" resultMap="CaregiverMap">
  SELECT DISTINCT
    c.caregiver_id,
    c.member_id,
    c.hope_work_area_location,
    c.hope_work_area_city,
    c.hope_work_place,
    c.hope_work_type,
    c.hope_employment_type,
    c.education_level,
    c.introduction,
    c.hope_work_amount,
    c.caregiver_created_at,
    c.caregiver_update_at,
    u.name,
    u.user_gender
  FROM caregiver c
  LEFT JOIN dv_users u ON c.member_id = u.member_id
  LEFT JOIN caregiver_certificates cc ON c.caregiver_id = cc.caregiver_id
  WHERE (
    LOWER(c.hope_work_area_location) LIKE CONCAT('%', LOWER(#{keyword}), '%')
    OR LOWER(c.hope_work_area_city) LIKE CONCAT('%', LOWER(#{keyword}), '%')
    OR LOWER(c.hope_work_place) LIKE CONCAT('%', LOWER(#{keyword}), '%')
    OR LOWER(c.hope_work_type) LIKE CONCAT('%', LOWER(#{keyword}), '%')
    OR LOWER(c.hope_employment_type) LIKE CONCAT('%', LOWER(#{keyword}), '%')
    OR LOWER(c.education_level) LIKE CONCAT('%', LOWER(#{keyword}), '%')
    OR LOWER(c.introduction) LIKE CONCAT('%', LOWER(#{keyword}), '%')
    OR CAST(c.hope_work_amount AS CHAR) LIKE CONCAT('%', #{keyword}, '%')
    OR LOWER(cc.certificate_name) LIKE CONCAT('%', LOWER(#{keyword}), '%')
  )
  AND c.trash_can = 0
</select>






 <select id="searchCaregiversWithFilters" parameterType="map" resultMap="CaregiverMap">
    SELECT DISTINCT
      c.*,
      u.name,
      u.user_gender
    FROM caregiver c
    INNER JOIN dv_users u ON c.member_id = u.member_id

    <where>
      <if test="location != null and location != ''">
        AND LOWER(c.hope_work_area_location) = LOWER(#{location})
      </if>
      <if test="city != null and city != ''">
        AND LOWER(c.hope_work_area_city) = LOWER(#{city})
      </if>
      <if test="gender != null and gender != ''">
        AND LOWER(u.user_gender) = LOWER(#{gender})
      </if>

      <if test="(certificates != null and certificates.size > 0) or (workType != null and workType.size > 0) or (employmentType != null and employmentType.size > 0)">
        AND (
          <if test="certificates != null and certificates.size > 0">
            (
              <foreach item="item" collection="certificates" separator=" OR ">
                EXISTS (
                  SELECT 1 FROM caregiver_certificates cert
                  WHERE cert.caregiver_id = c.caregiver_id
                  AND LOWER(cert.certificate_name) = LOWER(#{item})
                )
              </foreach>
            )
          </if>
          <if test="certificates != null and certificates.size > 0 and (workType != null and workType.size > 0)">
            OR
          </if>
          <if test="workType != null and workType.size > 0">
            (
              <foreach item="item" collection="workType" separator=" OR ">
                LOWER(c.hope_work_type) = LOWER(#{item})
              </foreach>
            )
          </if>
          <if test="(certificates != null and certificates.size > 0 or workType != null and workType.size > 0) and (employmentType != null and employmentType.size > 0)">
            OR
          </if>
          <if test="employmentType != null and employmentType.size > 0">
            (
              <foreach item="item" collection="employmentType" separator=" OR ">
                LOWER(c.hope_employment_type) = LOWER(#{item})
              </foreach>
            )
          </if>
        )
      </if>
    </where>

    ORDER BY c.caregiver_created_at DESC
  </select>
 
  
<select id="findDefaultMessageByCaregiverId" resultType="string">
    SELECT default_message
    FROM caregiver
    WHERE caregiver_id = #{facilityId}
</select>

  <!-- 새로운 상품(요양사) 등록 관련 쿼리들 -->
  <insert id="insertCaregiver" parameterType="com.daview.dto.CaregiverDTO">
    INSERT INTO caregiver (
      caregiver_id,
      member_id,
      hope_work_area_location,
      hope_work_area_city,
      hope_work_place,
      hope_work_type,
      hope_employment_type,
      education_level,
      introduction,
      hope_work_amount,
      caregiver_created_at,
      caregiver_update_at,
      trash_can
    ) VALUES (
      #{caregiverId},
      #{memberId},
      #{hopeWorkAreaLocation},
      #{hopeWorkAreaCity},
      #{hopeWorkPlace},
      #{hopeWorkType},
      #{hopeEmploymentType},
      #{educationLevel},
      #{introduction},
      #{hopeWorkAmount},
      NOW(),
      NOW(),
      0
    )
  </insert>

  <insert id="insertCaregiverCareer">
    INSERT INTO caregiver_career (
      caregiver_id,
      company_name,
      start_date,
      end_date
    ) VALUES (
      #{caregiverId},
      #{career.companyName},
      #{career.startDate},
      #{career.endDate}
    )
  </insert>

  <insert id="insertCaregiverCertificate">
    INSERT INTO caregiver_certificates (
      caregiver_id,
      certificate_name
    ) VALUES (
      #{caregiverId},
      #{certificateName}
    )
  </insert>
  
  
  <select id="findCaregiverInfoByMemberId" resultType="com.daview.dto.CaregiverDTO">
  SELECT *
  FROM caregiver
  WHERE member_id = #{memberId}
</select>

<select id="findCaregiverByCaregiverId" resultType="com.daview.dto.CaregiverDTO">
    SELECT *
    FROM caregiver
    WHERE caregiver_id = #{facilityId}
</select>

<!-- 채팅 상단 인포 위한 사용자 나누기  -->

  <select id="findByCaregiverId" resultType="com.daview.dto.CaregiverDTO">
  SELECT
    caregiver_id,
    member_id,
    hope_work_area_location,
    hope_work_area_city,
    default_message
  FROM caregiver
  WHERE caregiver_id = #{caregiverId}
    AND trash_can = 0
    AND caregiver_deleted_at IS NULL
  LIMIT 1
</select>


</mapper>
