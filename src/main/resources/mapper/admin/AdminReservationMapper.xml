<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.daview.mapper.admin.AdminReservationMapper">

    <sql id="baseSelectColumns">
        r.rsv_id as rsvId,
        r.member_id as memberId,
        r.prod_id as prodId,
        r.prod_type as prodType,
        r.prod_price as prodPrice,
        r.prod_nm as prodNm,
        r.prod_detail as prodDetail,
        r.prod_photo as prodPhoto,
        r.rsv_type as rsvType,
        r.rsv_date as rsvDate,
        r.rsv_cnt as rsvCnt,
        DATE(r.rsv_date) as createdAt,
        u.name as memberName,
        u.email as memberEmail,
        u.phone as memberPhone,
        CASE 
            WHEN r.rsv_type = 1 THEN 'PENDING'
            WHEN r.rsv_type = 2 THEN 'APPROVED'
            WHEN r.rsv_type = 0 THEN 'REJECTED'
            WHEN r.rsv_type = 4 THEN 'CANCELLED'
            WHEN r.rsv_type = 3 THEN 'COMPLETED'
            ELSE 'UNKNOWN'
        END as status
    </sql>
    
    <sql id="commonWhereConditions">
        <where>
            <if test="status != null and status != ''">
                AND CASE 
                    WHEN #{status} = 'PENDING' THEN r.rsv_type = 1
                    WHEN #{status} = 'APPROVED' THEN r.rsv_type = 2
                    WHEN #{status} = 'REJECTED' THEN r.rsv_type = 0
                    WHEN #{status} = 'CANCELLED' THEN r.rsv_type = 4
                    WHEN #{status} = 'COMPLETED' THEN r.rsv_type = 3
                    ELSE 1 = 1
                END
            </if>
            <if test="search != null and search != ''">
                AND (
                    r.prod_nm LIKE #{search}
                    OR u.name LIKE #{search}
                    OR u.email LIKE #{search}
                    OR r.rsv_id LIKE #{search}
                )
            </if>
            <if test="startDate != null and startDate != ''">
                <![CDATA[
                AND DATE(r.rsv_date) >= #{startDate}
                ]]>
            </if>
            <if test="endDate != null and endDate != ''">
                <![CDATA[
                AND DATE(r.rsv_date) <= #{endDate}
                ]]>
            </if>
            <if test="prodType != null and prodType != ''">
                AND r.prod_type = #{prodType}
            </if>
        </where>
    </sql>
    
    <!-- 페이지네이션과 필터링을 적용한 예약 목록 조회 -->
    <select id="getAllReservationsWithPagination" resultType="map">
        SELECT 
        <include refid="baseSelectColumns"/>
        FROM reservation r
        LEFT JOIN dv_users u ON r.member_id = u.member_id
        <include refid="commonWhereConditions"/>
        ORDER BY 
        <choose>
            <when test="sortBy == 'rsvId'">r.rsv_id</when>
            <when test="sortBy == 'rsvDate'">r.rsv_date</when>
            <when test="sortBy == 'memberId'">r.member_id</when>
            <when test="sortBy == 'prodNm'">r.prod_nm</when>
            <when test="sortBy == 'prodPrice'">r.prod_price</when>
            <when test="sortBy == 'rsvType'">r.rsv_type</when>
            <when test="sortBy == 'rsvCnt'">r.rsv_cnt</when>
            <when test="sortBy == 'prodType'">r.prod_type</when>
            <when test="sortBy == 'createdAt'">r.rsv_date</when>
            <otherwise>r.rsv_date</otherwise>
        </choose>
        <choose>
            <when test="sortDirection == 'ASC'">ASC</when>
            <otherwise>DESC</otherwise>
        </choose>
        LIMIT #{limit} OFFSET #{offset}
    </select>
    
    <!-- 필터링 조건에 맞는 예약 총 개수 조회 -->
    <select id="getReservationCount" resultType="int">
        SELECT COUNT(*)
        FROM reservation r
        LEFT JOIN dv_users u ON r.member_id = u.member_id
        <include refid="commonWhereConditions"/>
    </select>
    
    <!-- 특정 예약 상세 정보 조회 -->
    <select id="getReservationDetail" resultType="map">
        SELECT 
        <include refid="baseSelectColumns"/>
        FROM reservation r
        LEFT JOIN dv_users u ON r.member_id = u.member_id
        WHERE r.rsv_id = #{rsvId}
    </select>
    
    <!-- 예약 상태 변경 -->
    <update id="updateReservationStatus">
        UPDATE reservation
        SET rsv_type = #{rsvType}
        WHERE rsv_id = #{rsvId}
    </update>
    
    <!-- 전체 예약 개수 조회 -->
    <select id="getTotalReservationCount" resultType="int">
        SELECT COUNT(*)
        FROM reservation
    </select>
    
    <!-- 상태별 예약 개수 조회 -->
    <select id="getReservationsByStatus" resultType="map">
        SELECT 
            CASE 
                WHEN rsv_type = 1 THEN 'PENDING'
                WHEN rsv_type = 2 THEN 'APPROVED'
                WHEN rsv_type = 0 THEN 'REJECTED'
                WHEN rsv_type = 4 THEN 'CANCELLED'
                WHEN rsv_type = 3 THEN 'COMPLETED'
                ELSE 'UNKNOWN'
            END as status,
            COUNT(*) as count
        FROM reservation
        GROUP BY rsv_type
        ORDER BY rsv_type
    </select>
    
    <!-- 이번 달 예약 개수 조회 -->
    <select id="getThisMonthReservationCount" resultType="int">
        SELECT COUNT(*)
        FROM reservation
        WHERE YEAR(rsv_date) = YEAR(NOW()) 
        AND MONTH(rsv_date) = MONTH(NOW())
    </select>
    
    <!-- 오늘 예약 개수 조회 -->
    <select id="getTodayReservationCount" resultType="int">
        SELECT COUNT(*)
        FROM reservation
        WHERE DATE(rsv_date) = CURDATE()
    </select>
    
    <!-- 월별 예약 통계 조회 -->
    <select id="getMonthlyReservationStats" resultType="map">
        SELECT 
            DATE_FORMAT(rsv_date, '%Y-%m') as month,
            COUNT(*) as count,
            SUM(prod_price * rsv_cnt) as total_amount
        FROM reservation
        WHERE rsv_date >= DATE_SUB(NOW(), INTERVAL 12 MONTH)
        GROUP BY DATE_FORMAT(rsv_date, '%Y-%m')
        ORDER BY month DESC
    </select>
    
    <!-- 예약 삭제 (실제로는 상태 변경) -->
    <update id="deleteReservation">
        UPDATE reservation
        SET rsv_type = 2
        WHERE rsv_id = #{rsvId}
    </update>
    
    <!-- 상품 타입별 예약 통계 -->
    <select id="getReservationsByProductType" resultType="map">
        SELECT 
            prod_type,
            COUNT(*) as count,
            SUM(prod_price * rsv_cnt) as total_amount
        FROM reservation
        GROUP BY prod_type
        ORDER BY count DESC
    </select>
    
    <!-- 최근 예약 목록 조회 (대시보드용) -->
    <select id="getRecentReservations" resultType="map">
        SELECT 
        <include refid="baseSelectColumns"/>
        FROM reservation r
        LEFT JOIN dv_users u ON r.member_id = u.member_id
        ORDER BY r.rsv_date DESC
        LIMIT #{limit}
    </select>
    
    <!-- 예약자별 예약 통계 -->
    <select id="getReservationsByMember" resultType="map">
        SELECT 
            r.member_id,
            u.name as member_name,
            u.email as member_email,
            COUNT(*) as reservation_count,
            SUM(r.prod_price * r.rsv_cnt) as total_amount
        FROM reservation r
        LEFT JOIN dv_users u ON r.member_id = u.member_id
        GROUP BY r.member_id, u.name, u.email
        ORDER BY reservation_count DESC
        LIMIT #{limit}
    </select>

</mapper> 